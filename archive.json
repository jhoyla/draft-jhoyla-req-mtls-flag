{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-05-29T00:30:04.281077+00:00",
  "repo": "jhoyla/draft-jhoyla-req-mtls-flag",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "I_kwDOKjmGVs6ufiKv",
      "title": "Should this be \"request-mtls\" or should this be \"request-bot-auth\"?",
      "url": "https://github.com/jhoyla/draft-jhoyla-req-mtls-flag/issues/3",
      "state": "OPEN",
      "author": "bob-beck",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "\"This enables a number of use cases, for example allowing bots to authenticate themselves when mixed in with general traffic.\"\n\nAfter some discussion with you and others seems to indicate that there may be an opinion that \"browsers shouldn't do this\"\n\nIf the intention is truly for \"bot-auth\" should this really be about only bot-auth - and perhaps include being opinionated about what the bot-auth is to perhaps simplify the resulting pki for this? (maybe not just any old X.509 certificate blob with path building etc,  but perhaps something more limited or even a raw public key to encourage dedicated trust stores for this purpose?)\n\nOr is the intention here to be a generic \"it's safe to send me a certificate request\" that browsers/clients/things-not-bots could possibly start using for certain things - and leaving \"bot-auth\" to have to disambiguate the cases (i.e. what trust store to use) on the server by other means if both are in use. \n",
      "createdAt": "2025-03-18T07:49:25Z",
      "updatedAt": "2025-03-18T07:49:25Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOKjmGVs5dd2do",
      "title": "First draft",
      "url": "https://github.com/jhoyla/draft-jhoyla-req-mtls-flag/pull/1",
      "state": "MERGED",
      "author": "jhoyla",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-22T15:12:56Z",
      "updatedAt": "2023-10-22T15:13:24Z",
      "baseRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "baseRefName": "main",
      "baseRefOid": "c6a3ba36b4281cc3d98a5abab5ef7a39636d64e1",
      "headRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "headRefName": "version00",
      "headRefOid": "100998bc6ee53c8397c8432560b141a513b86355",
      "closedAt": "2023-10-22T15:13:24Z",
      "mergedAt": "2023-10-22T15:13:24Z",
      "mergedBy": "jhoyla",
      "mergeCommit": {
        "oid": "b656c7b70cbed37b0719c914baeaaf5dff41810c"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOKjmGVs5dh17m",
      "title": "First draft",
      "url": "https://github.com/jhoyla/draft-jhoyla-req-mtls-flag/pull/2",
      "state": "MERGED",
      "author": "jhoyla",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T13:12:07Z",
      "updatedAt": "2023-10-23T13:16:22Z",
      "baseRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "baseRefName": "main",
      "baseRefOid": "1610fe8ff3d1f07f59ea9ddfab986ec757382605",
      "headRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "headRefName": "version00",
      "headRefOid": "1610fe8ff3d1f07f59ea9ddfab986ec757382605",
      "closedAt": "2023-10-23T13:16:17Z",
      "mergedAt": "2023-10-23T13:16:17Z",
      "mergedBy": "jhoyla",
      "mergeCommit": {
        "oid": "1610fe8ff3d1f07f59ea9ddfab986ec757382605"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "PR_kwDOKjmGVs6TcGtu",
      "title": "Client MUST send empty Certificate message",
      "url": "https://github.com/jhoyla/draft-jhoyla-req-mtls-flag/pull/4",
      "state": "OPEN",
      "author": "jhoyla",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Clients that receive `CertificateRequest`s in practice will terminate the connection in anticipation of a \"certificate_required\" alert, rather than sending an empty `Certificate` message, as specified in [RFC-8446, Section 4.4.2](https://www.rfc-editor.org/rfc/rfc8446#section-4.4.2).\r\nThis PR updates the draft to specify that the client MUST send an empty `Certificate` message, and SHOULD NOT terminate the connection in anticipation of a \"certificate_required\" alert.\r\nWe can't require a MUST NOT terminate the connection, as the client might want to terminate the connection for other, unrelated reasons.",
      "createdAt": "2025-04-22T13:20:28Z",
      "updatedAt": "2025-05-28T23:51:07Z",
      "baseRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "baseRefName": "main",
      "baseRefOid": "9885460cf74ddbd2ac1bfc70e21ddbc10ae797a7",
      "headRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "headRefName": "jhoyla/empty-cert-message",
      "headRefOid": "03d2ea7a7e82739392e84f94fc6b873759ff5a5d",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "jhoyla",
          "authorAssociation": "OWNER",
          "body": "Following comments from @davidben, this has been changed to require the server to echo the flag in the `CertificateRequest` message. This allows the client to determine _why_ the server requested a certificate.",
          "createdAt": "2025-05-27T16:59:21Z",
          "updatedAt": "2025-05-27T16:59:21Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKjmGVs6rLo26",
          "commit": {
            "abbreviatedOid": "18637e5"
          },
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-27T17:27:50Z",
          "updatedAt": "2025-05-27T17:37:50Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "\r\n```suggestion\r\nextra round trip, and requires negotiation at the application layer.\r\n```",
              "createdAt": "2025-05-27T17:27:50Z",
              "updatedAt": "2025-05-27T17:37:50Z"
            },
            {
              "originalPosition": 76,
              "body": "It looks like the server can actually _offer_ TLS flags in CR: https://www.ietf.org/archive/id/draft-ietf-tls-tlsflags-15.html#section-3-4\r\n\r\nIn this case it might not be a good idea to ack the client's offer in CR as well.\r\n\r\nIn any case, I'm a little wary of this draft mandating where a server implementation chooses to acknowledge TLS Flags. The more flexible we can be, the less likely it is for this flag to complicate the implementation of other flags.",
              "createdAt": "2025-05-27T17:37:48Z",
              "updatedAt": "2025-05-27T17:37:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKjmGVs6rUkDs",
          "commit": {
            "abbreviatedOid": "18637e5"
          },
          "author": "jhoyla",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-28T09:29:49Z",
          "updatedAt": "2025-05-28T09:29:49Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "So I do think we need to specify one place, because otherwise you need logic to handle what to do if the flags disagree. Say the `ServerHello` doesn't set the flag, `EncryptedExtensions` does, and `CertificateRequest` doesn't. Is it an error? Does it being set anywhere => set? \r\n\r\nThe server can offer TLS Flags in `CertificateRequest`, but we can define the `request_mtls` flag to only be valid if it was offered in the `ClientHello`.",
              "createdAt": "2025-05-28T09:29:49Z",
              "updatedAt": "2025-05-28T09:29:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKjmGVs6rUowI",
          "commit": {
            "abbreviatedOid": "18637e5"
          },
          "author": "jhoyla",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-28T09:36:18Z",
          "updatedAt": "2025-05-28T09:36:19Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Added new language to that effect.",
              "createdAt": "2025-05-28T09:36:18Z",
              "updatedAt": "2025-05-28T09:36:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKjmGVs6rdpnz",
          "commit": {
            "abbreviatedOid": "18637e5"
          },
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-28T23:21:17Z",
          "updatedAt": "2025-05-28T23:21:17Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "I see. The TLS flags draft also requires us to specify which messages in which the flag may appear: https://datatracker.ietf.org/doc/html/draft-ietf-tls-tlsflags-15#section-4-4.3.1",
              "createdAt": "2025-05-28T23:21:17Z",
              "updatedAt": "2025-05-28T23:21:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKjmGVs6rdrA-",
          "commit": {
            "abbreviatedOid": "03d2ea7"
          },
          "author": "cjpatton",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-05-28T23:27:23Z",
          "updatedAt": "2025-05-28T23:51:07Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "How does the client handle the flag if it appears in a different message? Ideally the TLS Flags extension specifies the behavior in this case, but I'm not sure.",
              "createdAt": "2025-05-28T23:27:23Z",
              "updatedAt": "2025-05-28T23:51:07Z"
            },
            {
              "originalPosition": 79,
              "body": "Is this saying the server's acknowledgement (in the \"TLS Flags\" sense) is optional? If so, isn't the server's behavior here the same as if it doesn't implement the req mTLS flag?\r\n\r\nI think the phrase \"wishes to negotiate client authentication for another reason\" is throwing me. Am I right that you're just specifying behavior of servers that don't support this flag?\r\n",
              "createdAt": "2025-05-28T23:32:54Z",
              "updatedAt": "2025-05-28T23:51:07Z"
            },
            {
              "originalPosition": 83,
              "body": "The SHOULD NOT fills me with pause. As I understand it, the goal of this flag is to express to the server that the client will handle the CR in a specific way: respond with an (empty) CT. Is there a legitimate reason why a client might ignore this SHOULD NOT? ",
              "createdAt": "2025-05-28T23:48:03Z",
              "updatedAt": "2025-05-28T23:51:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOKjmGVs6TcSiJ",
      "title": "Update workflows",
      "url": "https://github.com/jhoyla/draft-jhoyla-req-mtls-flag/pull/5",
      "state": "MERGED",
      "author": "jhoyla",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Update workflows to use correct / modern dependencies.",
      "createdAt": "2025-04-22T13:39:32Z",
      "updatedAt": "2025-04-22T13:40:29Z",
      "baseRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "baseRefName": "main",
      "baseRefOid": "1722581ff997d45dbc692a7f79f90a5f09879dfe",
      "headRepository": "jhoyla/draft-jhoyla-req-mtls-flag",
      "headRefName": "jhoyla/update-workflows",
      "headRefOid": "d498e46a30cbab46f2115ff38c9df8c707f37feb",
      "closedAt": "2025-04-22T13:40:29Z",
      "mergedAt": "2025-04-22T13:40:28Z",
      "mergedBy": "jhoyla",
      "mergeCommit": {
        "oid": "9885460cf74ddbd2ac1bfc70e21ddbc10ae797a7"
      },
      "comments": [],
      "reviews": []
    }
  ]
}